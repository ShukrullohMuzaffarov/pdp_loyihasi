import os

from aiogram import types, Router, F
from aiogram.types import FSInputFile

from keyboards import mentorlar, kurslarimiz, start_button, language, kurslarimiz1, start_button1

router = Router()


@router.message(F.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –∫–æ–º–ø–∞–Ω–∏—é")
async def gef_about_company(msg: types.Message):
    company_image = FSInputFile(os.path.join(os.path.dirname(__file__), 'images', '–∏–Ω—Ñ–∞_–ø—Ä–æ_–∫–æ–º–ø–∞–Ω–∏—é.jpg'))

    text = "8 –ª–µ—Ç –æ–ø—ã—Ç–∞, –±–æ–ª–µ–µ 2000 —É—á–µ–Ω–∏–∫–æ–≤ –∏ –æ–ø—ã—Ç–Ω—ã—Ö –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤!"
    await msg.answer_photo(photo=company_image, caption=text)


@router.message(F.text == "–ù–∞—à–∏ –ø—Ä–µ–ø–æ–¥—ãüéì")
async def gef_mentorlar(msg: types.Message):
    img1 = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "img.png"))
    img2 = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "img_1.png"))
    img3 = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "img_2.png"))
    mentorlar = [
        [img1, "–•–∞–±–∏–±—É–ª–ª–∞ –ù—É—Ä–∏–¥–∏–Ω–æ–≤"],
        [img2, "–®–æ—Ö—Ä—É—Ö –ê–±–¥—É—Ä–∞—Ö–º–∞–Ω–æ–≤"],
        [img3, "–ê–±—Ä–æ—Ä–∂–æ–Ω –ê–±–¥—É—Å–∞–∏–¥–æ–≤"]
    ]
    for mentor in mentorlar:
        await msg.answer_photo(photo=mentor[0], caption=mentor[1])


@router.message(F.text == "–ù–∞—à–∏ –∫—É—Ä—Å—ã")
async def gef_kurslarimiz(msg: types.Message):
    await msg.answer(text="–ù–∞—à–∏ –∫—É—Ä—Å—ã", reply_markup=kurslarimiz)


@router.message(F.text == "–ü–∞–π—Ç–æ–Ω –î–∂—É–Ω–∏–æ—Ä")
async def gef_python(msg: types.Message):
    company_image = FSInputFile(os.path.join(os.path.dirname(__file__), "images","–ø–∞–π—Ç–æ–Ω_–¥–∂—É–Ω–∏–æ—Ä.jpg"))
    text = "Python - –û—Å–Ω–æ–≤—ã –±–æ–µ–≤–æ–≥–æ —Ñ–∏–∫—Å–∏–Ω–≥–∞ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è"
    await msg.answer_photo(photo=company_image, caption=text)


@router.message(F.text == "–§—Ä–æ–Ω—Ç–µ–¥ –î–∂—É–Ω–∏–æ—Ä")
async def gef_frontend(msg: types.Message):
    company_image = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "js.jpg"))
    text = "–≠—Ç–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É—é—Ç –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è frontend- –∏ backend-—á–∞—Å—Ç–µ–π —Å–∞–π—Ç–æ–≤, –∞ —Ç–∞–∫–∂–µ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"
    await msg.answer_photo(photo=company_image, caption=text)


@router.message(F.text == "–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞")
async def gef_robototexnika(msg: types.Message):
    company_image = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "—Ä–æ–±–æ—Ç—è–≥–∞.jpg"))
    text = "–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞ –æ–ø–∏—Ä–∞–µ—Ç—Å—è –Ω–∞ —Ç–∞–∫–∏–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã, –∫–∞–∫ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞, –º–µ—Ö–∞–Ω–∏–∫–∞, –∫–∏–±–µ—Ä–Ω–µ—Ç–∏–∫–∞, —Ç–µ–ª–µ–º–µ—Ö–∞–Ω–∏–∫–∞, –º–µ—Ö–∞—Ç—Ä–æ–Ω–∏–∫–∞[4], –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞, –∞ —Ç–∞–∫–∂–µ —Ä–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏–∫–∞ –∏ —ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞"
    await msg.answer_photo(photo=company_image, caption=text)


@router.message(F.text == "–°–∫—Ä–µ—Ç—á")
async def gef_scratch(msg: types.Message):
    company_image = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "–∫–∞—à–∞–∫.jpg"))
    text = "–û–Ω —Å–æ–∑–¥–∞–Ω –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏–¥–µ–π —è–∑—ã–∫–∞ –õ–æ–≥–æ –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –õ–µ–≥–æ."
    await msg.answer_photo(photo=company_image, caption=text)


@router.message(F.text == "–ö–æ–Ω—Ç–∞–∫—Ç/–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ")
async def gef_scratch(msg: types.Message):
    company_image = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "gps.jpg"))
    text = "+998 78 777-74-77"
    await msg.answer_photo(photo=company_image, caption=text)


@router.message(F.text == "üîô–ù–∞–∑–∞–¥")
async def gef_back(msg: types.Message):
    await msg.answer(text="back", reply_markup=start_button)


@router.message(F.text == "–†—É—Å/–ïng –Ø–∑—ã–∫")
async def gef_eng(msg: types.Message):
    await msg.answer("–í—ã–±–µ—Ä–∏—Ç—å–µ –æ–¥–∏–Ω –∏–∑ —è–∑—ã–∫–æ–≤", reply_markup=language)


@router.message(F.text == "Rus")
async def select_language(msg: types.Message):
    await msg.answer(text="–í–∞—à –≤—ã–±–æ—Ä –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ", reply_markup=start_button)


@router.message(F.text == "Eng")
async def select_language(msg: types.Message):
    await msg.answer(text="Your choice has stopped at English", reply_markup=start_button1)


@router.message(F.text == "Company Information")
async def gef_about_company(msg: types.Message):
    company_image = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "–∏–Ω—Ñ–∞_–ø—Ä–æ_–∫–æ–º–ø–∞–Ω–∏—é.jpg"))
    text = "8 years of experience, more than 2000 students and experienced mentors!"
    await msg.answer_photo(photo=company_image, caption=text)


@router.message(F.text == "Our Courses")
async def gef_kurslarimiz(msg: types.Message):
    await msg.answer(text="Our Courses", reply_markup=kurslarimiz1)


@router.message(F.text == "Python Junior")
async def gef_python(msg: types.Message):
    company_image = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "–ø–∞–π—Ç–æ–Ω_–¥–∂—É–Ω–∏–æ—Ä.jpg"))
    text = "Python - Basics of Combat Fixing and Programming"
    await msg.answer_photo(photo=company_image, caption=text)


@router.message(F.text == "Fronted Junior")
async def gef_frontend(msg: types.Message):
    company_image = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "js.jpg"))
    text = "It is an interpreted programming language that is used to write frontend and backend parts of websites, as well as mobile applications."
    await msg.answer_photo(photo=company_image, caption=text)


@router.message(F.text == "Robotics")
async def gef_robototexnika(msg: types.Message):
    company_image = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "—Ä–æ–±–æ—Ç—è–≥–∞.jpg"))
    text = "Robotics is based on such disciplines as electronics, mechanics, cybernetics, telemechanics, mechatronics[4], computer science, as well as radio engineering and electrical engineering"
    await msg.answer_photo(photo=company_image, caption=text)


@router.message(F.text == "Scratch")
async def gef_scratch(msg: types.Message):
    company_image = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "–∫–∞—à–∞–∫.jpg"))
    text = "It was created as a continuation of the ideas of the Logo language and the Lego constructor."
    await msg.answer_photo(photo=company_image, caption=text)


@router.message(F.text == "Back")
async def gef_back(msg: types.Message):
    await msg.answer(text="Back", reply_markup=start_button1)


@router.message(F.text == "Our Teachers")
async def gef_teachers(msg: types.Message):
    img4 = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "img.png"))
    img5 = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "img_1.png"))
    img6 = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "img_2.png"))
    teachers = [
        [img4, "Habibulla Nuridinov"],
        [img5, "Shokhrukh Abdurakhmanov"],
        [img6, "Abrorjon Abdusaidov"]]
    for teacher in teachers:
        await msg.answer_photo(photo=teacher[0], caption=teacher[1])


@router.message(F.text == "Rus/Eng languige")
async def gef_eng(msg: types.Message):
    await msg.answer("Choose one of languages", reply_markup=language)


@router.message(F.text == "Contact/Location")
async def gef_scratch(msg: types.Message):
    company_image = FSInputFile(os.path.join(os.path.dirname(__file__), "images", "gps.jpg"))
    text = "+998 78 777-74-77"
    await msg.answer_photo(photo=company_image, caption=text)